@page "/tournament/{TournamentId:guid}"
@using TennisScoreWebApp.Infrastructure.ExternalServices.TennisScoreApi
@inject ITennisApiClient TennisApiClient
@inject NavigationManager Navigation

@rendermode InteractiveServer

@if (Tournament == null)
{
    <p>Chargement...</p>
}
else
{
    <!-- Carte Infos Tournoi -->
    <div class="card shadow-sm mb-4">
        <div class="card-body p-3">
            <h3 class="card-title mb-2">@Tournament.Name</h3>
            <p class="mb-1"><strong>Lieu :</strong> @Tournament.Location</p>
            <p class="mb-1"><strong>Surface :</strong> @Tournament.Surface</p>
            <p class="mb-1"><strong>Dates :</strong> @($"{Tournament.StartDate:dd MMM yyyy} â€“ {Tournament.EndDate:dd MMM yyyy}")</p>
            <p class="mb-0"><strong>Matches :</strong> @Tournament.Matches.Count</p>
        </div>
    </div>

    <!-- Scores en direct -->
    <h5 class="mb-3">Scores en direct</h5>

    <div class="row g-2">
        @foreach (var match in Tournament.Matches.Take(ShowAll ? Tournament.Matches.Count : 6))
        {
            <div class="col-12 col-md-6 col-lg-4">
                <NavLink class="text-decoration-none text-dark" href=@($"/match/{match.Id}")>
                    <div class="card shadow-sm">
                        <div class="card-body p-2">
                            <table class="table table-sm table-borderless text-center mb-0 align-middle">
                                <tbody>
                                    <tr>
                                        <td class="text-start fw-bold">
                                            @match.Player1.LastName
                                            @if (match.ServingPlayerId == match.Player1.Id)
                                            {
                                                <span title="Au service"> ðŸŽ¾</span>
                                            }
                                        </td>
                                        @foreach (var set in match.Sets)
                                        {
                                            <td>@set.Player1Games</td>
                                        }
                                        <td class="fw-bold text-primary">
                                            @match.Player1.CurrentScore
                                        </td>
                                    </tr>
                                    <tr>
                                        <td class="text-start fw-bold">
                                            @match.Player2.LastName
                                            @if (match.ServingPlayerId == match.Player2.Id)
                                            {
                                                <span title="Au service"> ðŸŽ¾</span>
                                            }
                                        </td>
                                        @foreach (var set in match.Sets)
                                        {
                                            <td>@set.Player2Games</td>
                                        }
                                        <td class="fw-bold text-primary">
                                            @match.Player2.CurrentScore
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </NavLink>
            </div>
        }
    </div>

    @if (Tournament.Matches.Count > 6)
    {
        <div class="text-center mt-3">
            <button class="btn btn-outline-primary btn-sm" @onclick="ToggleShowAll">
                @(ShowAll ? "Voir moins" : "Voir plus")
            </button>
        </div>
    }
}

@code {
    [Parameter] public Guid TournamentId { get; set; }
    private TournamentDto? Tournament { get; set; }
    private bool ShowAll = false;

    protected override async Task OnInitializedAsync()
    {
        Tournament = await TennisApiClient.TournamentsGETAsync(TournamentId);
    }

    private void ToggleShowAll() => ShowAll = !ShowAll;
}
